name: Check Node Version File

on:
  pull_request:
    paths:
      - 'node-version-file'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/check-node-version-file.yml'

jobs:
  check-node-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Read node-version-file
      id: read-node-version-file
      run: |
        NODE_VERSION=$(cat node-version-file)
        echo "::set-output name=node_version::${NODE_VERSION}"

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ steps.read-node-version-file.outputs.node_version }}

    - name: Validate Node.js version
      run: |
        node --version
        npm --version

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

    - name: Run tests
      run: npm test

    - name: Check outdated dependencies
      run: npm outdated

    - name: Post PR comment for node-version-file changes
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const nodeVersionFileChanged = fs.existsSync('node-version-file') && fs.readFileSync('node-version-file', 'utf8') !== '';
          if (nodeVersionFileChanged) {
            const pullRequestNumber = context.payload.pull_request.number;
            const nodeVersion = fs.readFileSync('node-version-file', 'utf8');
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pullRequestNumber,
              body: `The Node.js version specified in the node-version-file is ${nodeVersion}. Please ensure it is compatible and secure.`
            });
          }
